env Command
 

The env command allows you to display your current environment or run a specified command in a changed environment. 


                                                                             
┌──(avanish㉿avanish)-[~/Documents]
└─$ env | grep 'PATH'
WINDOWPATH=2
PATH=/home/avanish/.local/bin:/usr/local/sbin:/usr/sbin:/sbin:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games:/snap/bin
                                                                                
┌──(avanish㉿avanish)-[~/Documents]
└─$ echo $PATH                   
/home/avanish/.local/bin:/usr/local/sbin:/usr/sbin:/sbin:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games:/snap/bin
                                                                                
┌──(avanish㉿avanish)-[~/Documents]
└─$ whereis ls   
ls: /usr/bin/ls /usr/share/man/man1/ls.1.gz



    env | grep 'PATH': This command prints out all environment variables set in the current shell session, 
    and then filters for only the ones containing the string "PATH". The output shows two environment variables: WINDOWPATH and PATH.

    echo $PATH: This command prints out the value of the PATH environment variable, which is a colon-separated list of
    \directories that the shell searches for executable files when a command is entered.

    whereis ls: This command searches for the binary executable file for the ls command, which lists the contents of directories.
    The output shows that there are two locations where the ls binary file is located: /usr/bin/ls and /usr/share/man/man1/ls.1.gz.
        
#include <stdio.h>


int main(int argc, char *argv[]){
	if(argc==3){
printf("Hello\n %s",argv[1]);}
	else{fprintf(stderr,"usage: %s <name>\n",argv[0]);
	return 1;}
return 0;
}
 
